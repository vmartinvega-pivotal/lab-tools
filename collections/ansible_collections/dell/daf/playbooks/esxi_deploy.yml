---
# - name: Deploy VMs for nfs
#   hosts: nfs
#   connection: local
#   gather_facts: false
#   tasks:
#     - name: Include role to deploy vms
#       ansible.builtin.include_role:
#         name: dell.daf.vcenter
#         tasks_from: deploy_vm
#       vars:
#         vm_name: "{{ name }}"
#         vm_template: "{{ template }}"
#         vm_folder: "{{ folder }}"
#         vm_networks: "{{ networks }}"
#         vm_disk: "{{ disk }}"
#         vm_hardware: "{{ hardware }}"
#         vm_dns: "{{ dns }}"
#         vm_domain: "{{ domain }}"

# - name: Setup NFS service
#   hosts: nfs
#   gather_facts: true
#   become: true
#   tasks:
#     - name: Include role to setup NFS server
#       ansible.builtin.include_role:
#         name: dell.daf.nfs

- name: Deploy ESXis OVAs
  hosts: "{{ variable_hosts }}"
  connection: local
  gather_facts: false
  tasks:
    - name: Set fact for local folder
      ansible.builtin.set_fact:
        local_folder: "{{ lookup('env', 'LOCAL_FOLDER') or '/tmp' }}"

    - name: Check if the ova exists locally
      ansible.builtin.stat:
        path: "{{ local_folder }}/{{ ova.name }}"
      register: ova_response

    - name: Download the ova
      ansible.builtin.include_role:
        name: dell.daf.vcenter
        tasks_from: get_from_datastore
      vars:
        vc_server: "{{ vcenter_hostname }}"
        vc_username: "{{ vcenter_username }}"
        vc_password: "{{ vcenter_password }}"
        datastore: "{{ datastore_name }}"
        source_path: "ova/vmware/esxi/{{ ova.name }}"
        target_path: "{{ local_folder }}/{{ ova.name }}"
      when: not ova_response.stat.exists

    - name: Deploy ova
      ansible.builtin.include_role:
        name: dell.daf.ova
      vars:
        vm_name: "{{ name }}"
        vm_folder: "{{ folder }}"

# Add more CPUs
# Mount NFS
#esxcli storage nfs add --host=nfs.home.local --share=/mnt/datastore --volume-name=datastore1
---
- name: Set generic facts for ovftool
  ansible.builtin.set_fact:
    ovf_args: 
      - "{{ ovftool_bin }}"
      - --noSSLVerify=true

- name: Defining VM target
  ansible.builtin.set_fact:
    vm_target: "{{ 'vi://' + (vcenter_username | string | urlencode) + ':' + (vcenter_password | string | urlencode) + '@' + (vcenter_hostname | string) + '/' + (datacenter_name | string) + '/vm/' + (folder | string) + '/' + (name | string) }}"

- name: Adding ovftool target
  ansible.builtin.set_fact:
    command_to_execute: "{{ ovf_args + [ vm_target ] + [(name | string) + '.ovf'] }}"

- name: Debug info
  ansible.builtin.debug:
    msg: "Command to execute: {{ command_to_execute }}"

- name: Remove some files
  ansible.builtin.file:
    path: "{{ file }}"
    state: absent
  loop:
    - "{{ name }}-disk1.vmdk"
    - "{{ name }}.vmdk"
    - "{{ name }}-file1.nvram"
    - "{{ name }}.nvram"
    - "{{ name }}.mf"
    - "{{ name }}.ovf"
    - "{{ name }}.ova"
    - "{{ name }}-{{ version }}.ova"
  loop_control:
    loop_var: file
  delegate_to: localhost

- name: Run ovftool to export to ovf
  ansible.builtin.command:
    argv: "{{ command_to_execute }}"
  delegate_to: localhost

- name: Modify OVF file
  ansible.builtin.lineinfile:
    path: "{{ name }}.ovf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: True
  delegate_to: localhost
  loop:
    - { regexp: '^(.*){{ name }}-disk1.vmdk(.*)$', line: '\1{{ name }}.vmdk\2' }
    - { regexp: '^(.*){{ name }}-file1.nvram(.*)$', line: '' }
    - { regexp: '^(.*)ovf:/file/file2(.*)$', line: '' }

- name: Rename file
  ansible.builtin.file:
    src: "{{ name }}-disk1.vmdk"
    dest: "{{ name }}.vmdk"
    state: link
  delegate_to: localhost

- name: Remove files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  delegate_to: localhost
  loop:
    - "{{ name }}-file1.nvram"
    - "{{ name }}.mf"

- name: Modify VirtualHardwareSection line in jumpcr.ovf
  ansible.builtin.lineinfile:
    path: "{{ name }}.ovf"
    regexp: '^    <VirtualHardwareSection>'
    line: '    <VirtualHardwareSection ovf:transport="com.vmware.guestInfo">'
  delegate_to: localhost

- name: Add ProductSection to jumpcr.ovf
  ansible.builtin.lineinfile:
    path: "{{ name }}.ovf"
    regexp: '^  </VirtualSystem>'
    line: >-
        <ProductSection>
          <Info>Information about the installed software</Info>
          <Product>Cyber Recovery Automation - {{ version }}</Product>
          <Vendor>Vicente Martin</Vendor>
          <ProductUrl>https://github.com/DellAutomation/cyber-recovery-accelerator</ProductUrl>
          <Category>Networking</Category>
          <Property ovf:key="guestinfo.hostname" ovf:type="string" ovf:userConfigurable="true">
            <Label>Hostname</Label>
          </Property>
          <Property ovf:key="guestinfo.ipaddress" ovf:type="string" ovf:userConfigurable="true">
            <Label>IP Address</Label>
          </Property>
          <Property ovf:key="guestinfo.netmask" ovf:type="string" ovf:userConfigurable="true">
            <Label>Netmask(CIDR Format)</Label>
          </Property>
          <Property ovf:key="guestinfo.gateway" ovf:type="string" ovf:userConfigurable="true">
            <Label>Gateway</Label>
          </Property>
          <Property ovf:key="guestinfo.dns" ovf:type="string" ovf:userConfigurable="true">
            <Label>DNS Server</Label>
          </Property>
        </ProductSection>
        </VirtualSystem>
  delegate_to: localhost

- name: Adding ova target
  ansible.builtin.set_fact:
    command_to_execute: "{{ ovf_args + [(name | string) + '.ovf'] + [(name | string) + '.ova'] }}"

- name: Debug info
  ansible.builtin.debug:
    msg: "Command to execute: {{ command_to_execute }}"

- name: Run ovftool to convert to ova
  ansible.builtin.command:
    argv: "{{ command_to_execute }}"
  delegate_to: localhost

- name: Remove some files
  ansible.builtin.file:
    path: "{{ file }}"
    state: absent
  loop:
    - "{{ name }}-disk1.vmdk"
    - "{{ name }}.vmdk"
    - "{{ name }}.ovf"
  loop_control:
    loop_var: file
  delegate_to: localhost

- name: Rename file ova
  ansible.builtin.file:
    src: "{{ name }}.ova"
    dest: "{{ name }}-{{ version }}.ova"
    state: link
  delegate_to: localhost